<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>AdminLTE 3 | Dashboard</title>

    {{>layout/head}}

    <style>
        .document-editor {
            border: 1px solid var(--ck-color-base-border);
            border-radius: var(--ck-border-radius);

            /* Set vertical boundaries for the document editor. */
            max-height: 700px;

            /* This element is a flex container for easier rendering. */
            display: flex;
            flex-flow: column nowrap;
        }

        .document-editor__toolbar {
            /* Make sure the toolbar container is always above the editable. */
            z-index: 1;

            /* Create the illusion of the toolbar floating over the editable. */
            box-shadow: 0 0 5px hsla( 0,0%,0%,.2 );

            /* Use the CKEditor CSS variables to keep the UI consistent. */
            border-bottom: 1px solid var(--ck-color-toolbar-border);
        }

        /* Adjust the look of the toolbar inside of the container. */
        .document-editor__toolbar .ck-toolbar {
            border: 0;
            border-radius: 0;
        }

        /* Make the editable container look like the inside of a native word processor app. */
        .document-editor__editable-container {
            padding: calc( 2 * var(--ck-spacing-large) );
            background: var(--ck-color-base-foreground);

            /* Make it possible to scroll the "page" of the edited content. */
            overflow-y: scroll;
        }

        .document-editor__editable-container .document-editor__editable.ck-editor__editable {
            /* Set the dimensions of the "page". */
            width: 15.8cm;
            min-height: 21cm;

            /* Keep the "page" off the boundaries of the container. */
            padding: 1cm 2cm 2cm;

            border: 1px hsl( 0,0%,82.7% ) solid;
            border-radius: var(--ck-border-radius);
            background: white;

            /* The "page" should cast a slight shadow (3D illusion). */
            box-shadow: 0 0 5px hsla( 0,0%,0%,.1 );

            /* Center the "page". */
            margin: 0 auto;
        }

        /* Override the page's width in the "Examples" section which is wider. */
        .main__content-wide .document-editor__editable-container .document-editor__editable.ck-editor__editable {
            width: 18cm;
        }

        /* Set the default font for the "page" of the content. */
        .document-editor .ck-content,
        .document-editor .ck-heading-dropdown .ck-list .ck-button__label {
            font: 16px/1.6 "Helvetica Neue", Helvetica, Arial, sans-serif;
        }

        /* Adjust the headings dropdown to host some larger heading styles. */
        .document-editor .ck-heading-dropdown .ck-list .ck-button__label {
            line-height: calc( 1.7 * var(--ck-line-height-base) * var(--ck-font-size-base) );
            min-width: 6em;
        }

        /* Scale down all heading previews because they are way too big to be presented in the UI.
        Preserve the relative scale, though. */
        .document-editor .ck-heading-dropdown .ck-list .ck-heading_heading1 .ck-button__label,
        .document-editor .ck-heading-dropdown .ck-list .ck-heading_heading2 .ck-button__label {
            transform: scale(0.8);
            transform-origin: left;
        }

        /* Set the styles for "Heading 1". */
        .document-editor .ck-content h2,
        .document-editor .ck-heading-dropdown .ck-heading_heading1 .ck-button__label {
            font-size: 2.18em;
            font-weight: normal;
        }

        .document-editor .ck-content h2 {
            line-height: 1.37em;
            padding-top: .342em;
            margin-bottom: .142em;
        }

        /* Set the styles for "Heading 2". */
        .document-editor .ck-content h3,
        .document-editor .ck-heading-dropdown .ck-heading_heading2 .ck-button__label {
            font-size: 1.75em;
            font-weight: normal;
            color: hsl( 203, 100%, 50% );
        }

        .document-editor .ck-heading-dropdown .ck-heading_heading2.ck-on .ck-button__label {
            color: var(--ck-color-list-button-on-text);
        }

        /* Set the styles for "Heading 2". */
        .document-editor .ck-content h3 {
            line-height: 1.86em;
            padding-top: .171em;
            margin-bottom: .357em;
        }

        /* Set the styles for "Heading 3". */
        .document-editor .ck-content h4,
        .document-editor .ck-heading-dropdown .ck-heading_heading3 .ck-button__label {
            font-size: 1.31em;
            font-weight: bold;
        }

        .document-editor .ck-content h4 {
            line-height: 1.24em;
            padding-top: .286em;
            margin-bottom: .952em;
        }

        /* Make the block quoted text serif with some additional spacing. */
        .document-editor .ck-content blockquote {
            font-family: Georgia, serif;
            margin-left: calc( 2 * var(--ck-spacing-large) );
            margin-right: calc( 2 * var(--ck-spacing-large) );
        }

        @media only screen and (max-width: 960px) {
            /* Because on mobile 2cm paddings are to big. */
            .document-editor__editable-container .document-editor__editable.ck-editor__editable {
                padding: 1.5em;
            }
        }

        @media only screen and (max-width: 1200px) {
            .main__content-wide .document-editor__editable-container .document-editor__editable.ck-editor__editable {
                width: 100%;
            }
        }

        /* Style document editor a'ka Google Docs.*/
        @media only screen and (min-width: 1360px) {
            .main .main__content.main__content-wide {
                padding-right: 0;
            }
        }

        @media only screen and (min-width: 1600px) {
            .main .main__content.main__content-wide {
                width: 24cm;
            }

            .main .main__content.main__content-wide .main__content-inner {
                width: auto;
                margin: 0 50px;
            }

            /* Keep "page" look based on viewport width. */
            .main__content-wide .document-editor__editable-container .document-editor__editable.ck-editor__editable {
                width: 60%;
            }
        }
    </style>
</head>
<body class="hold-transition sidebar-mini layout-fixed sidebar-collapse">
<div class="wrapper">

    {{>layout/header}}

    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <div class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1 class="m-0">문서양식 관리</h1>
                    </div><!-- /.col -->
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><a href="#">Home</a></li>
                            <li class="breadcrumb-item">문서양식 관리</li>
                            <li class="breadcrumb-item active">문서양식 관리</li>
                        </ol>
                    </div><!-- /.col -->
                </div><!-- /.row -->
            </div><!-- /.container-fluid -->
        </div>
        <!-- /.content-header -->

        <!-- Main content -->
        <!-- 작업할 때 이 항목 내용을 수정하세요 -->
        <section class="content">
            <div class="container-fluid">
                <div class="card">
                    <div class="card-header">
                        글 작성
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <form method="post" id="approvalForm">
                            <div class="form-group">
                                <label for="formName">양식명</label>
                                <input type="text" class="form-control" id="formName" name="formName">
                            </div>
                            <div class="form-group">
                                <label for="editor">양식내용</label>
    <!--                            <div id="summernote">Hello Summernote</div>-->
                                <div id="toolbar-container"></div>
                                <div id="editor">
                                    <p>This is the initial editor content.</p>
                                </div>
                                <input type="hidden" name="formText" id="formText">
                            </div>
                            <div class="form-group">
                                <label for="isUsed">사용여부</label>
                                <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                    <label class="btn bg-olive active">
                                        <input type="radio" name="isUsed" id="option_b1" value="true"> 사용
                                    </label>
                                    <label class="btn bg-warning">
                                        <input type="radio" name="isUsed" id="option_b2" value="false"> 미사용
                                    </label>
                                </div>
                            </div>
                            <button class="btn btn-primary" id="btnSubmit" type="button">글 등록</button>
                        </form>
                    </div>
                </div>
            </div>
        </section>
        <!-- /.content -->
    </div>
    <!-- /.content-wrapper -->
    {{>layout/footer}}


</div>
<!-- ./wrapper -->

{{>layout/library}}

    <script>
        let data;
        let editor;

        DecoupledEditor
                .create( document.querySelector( '#editor' ) )
                .then( createdEditor => {
                    editor = createdEditor;
                    const toolbarContainer = document.querySelector( '#toolbar-container' );

                    toolbarContainer.appendChild( editor.ui.view.toolbar.element );
                } )
                .catch( error => {
                    console.error( error );
                } );

        $(()=>{
            $("#btnSubmit").on("click", function () {
                event.preventDefault();
                console.log("폼 입력 테스트")

                const editText = editor.getData();

                console.log('editText', editText);

                $("#formText").val(editText);

                //$("#formText").setValue()

                $("#approvalForm").submit();
            })
        })

    </script>
</body>
</html>
